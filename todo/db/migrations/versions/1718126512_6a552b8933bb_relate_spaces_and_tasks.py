"""Relate spaces and tasks.

Revision ID: 6a552b8933bb
Revises: 727f8e9e7313
Create Date: 2024-06-11 17:21:52.092695+00:00

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

revision: str = "6a552b8933bb"
down_revision: Union[str, None] = "727f8e9e7313"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    conn = op.get_bind()

    conn.execute(
        sa.text(
            "INSERT INTO spaces (name, description) VALUES (:name, :description)"
        ).bindparams(
            name="Default",
            description="Default space for tasks management",
        )
    )
    default_space_id = conn.scalar(sa.text("SELECT id FROM spaces"))

    op.add_column("tasks", sa.Column("space_id", sa.Integer(), nullable=True))
    conn.execute(
        sa.text("UPDATE tasks SET space_id = :space_id").bindparams(
            space_id=default_space_id
        )
    )

    with op.batch_alter_table("tasks", recreate="always") as batch_op:
        batch_op.alter_column("space_id", nullable=False)
        batch_op.create_foreign_key(
            op.f("fk_tasks_space_id_spaces"), "spaces", ["space_id"], ["id"]
        )


def downgrade() -> None:
    with op.batch_alter_table("tasks", recreate="always") as batch_op:
        # ### commands auto generated by Alembic - please adjust! ###
        batch_op.drop_constraint(op.f("fk_tasks_space_id_spaces"), type_="foreignkey")
        batch_op.drop_column("space_id")
        # ### end Alembic commands ###

    op.execute(
        sa.text("DELETE FROM spaces WHERE name = :name ").bindparams(name="Default")
    )
